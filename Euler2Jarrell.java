// Problem #2
/* Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/

import java.util.*;
public class Euler2Jarrell
{
	public static void main(String[] args)
	{
		ArrayList<Integer> fibSequence = new ArrayList<Integer>();
		fibSequence.add(1);
		fibSequence.add(2);
		int z = 4000000;
		int d = 0; 
		for (int i = 2; d<z; i++)
		{
			d = fibSequence.get(i-2)+fibSequence.get(i-1); 
			if (d<z)
			{
				fibSequence.add(d); 
			}
			else
			{
				break;
			}
		}	
		int r = 0;
		for (int c : fibSequence)
		{
			if (c%2==0)
			{
				r+=c;
			}
			else
			{
				continue;
			}
		}
		System.out.print(r);
	}
}